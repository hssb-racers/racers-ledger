on: [push, pull_request]

name: Build

jobs:
  build-plugin:
    name: Build RACErsLedger.dll
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      name: checkout main repository

    - uses: actions/checkout@v2
      name: checkout dependency DLLs
      with:
        ssh-key: '${{ secrets.DLLSSH }}'
        repository: hssb-racers/dlls
        path: DLLs

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.3.3

    - uses: nuget/setup-nuget@v1

    - run: nuget restore

    - name: Build
      run: msbuild

    - name: Push DLLÂ to workflow artifacts
      uses: actions/upload-artifact@v2
      with:
        name: plugin
        path: |
          obj/Debug/RACErsLedger.dll
          bin/Debug/websocket-sharp.dll


  build-lamprey-linux:
    name: Build Lamprey for Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cargo Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
            RACErsLedgerLamprey/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path RACErsLedgerLamprey/Cargo.toml --release

      - name: extract built binary
        uses: actions/upload-artifact@v2
        with:
          name: racers_ledger_lamprey-linux
          path: RACErsLedgerLamprey/target/release/racers-ledger-lamprey


  build-lamprey-windows:
    name: Build Lamprey for Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cargo Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
            RACErsLedgerLamprey/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: x86_64-pc-windows-msvc
          override: true

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --manifest-path RACErsLedgerLamprey/Cargo.toml --target x86_64-pc-windows-msvc --release

      - name: extract built binary
        uses: actions/upload-artifact@v2
        with:
          name: racers_ledger_lamprey-windows
          path: RACErsLedgerLamprey/target/x86_64-pc-windows-msvc/release/racers-ledger-lamprey.exe



  test-lamprey:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path RACErsLedgerLamprey/Cargo.toml


  fmt-lamprey:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - run: rustup component add rustfmt

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path RACErsLedgerLamprey/Cargo.toml --all -- --check


  clippy-lamprey:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cargo Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
            RACErsLedgerLamprey/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}-clippy
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - run: rustup component add clippy

      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path RACErsLedgerLamprey/Cargo.toml -- -D warnings


  package:
    name: Package everything
    runs-on: ubuntu-latest
    needs:
      - build-plugin
      - build-lamprey-linux
      - build-lamprey-windows
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: plugin
          path: artifacts/plugin

      - uses: actions/download-artifact@v2
        with:
          name: racers_ledger_lamprey-linux
          path: artifacts/linux

      - name: make linux binary executable
        run: chmod +x artifacts/linux/racers-ledger-lamprey

      - uses: actions/download-artifact@v2
        with:
          name: racers_ledger_lamprey-windows
          path: artifacts/windows

      - name: Display structure of downloaded files
        run: ls -Rl artifacts

      - name: make root folder for .zip
        run: mkdir -p RACErsLedger

      - name: copy files to the right place
        run: cp artifacts/plugin/*/*/* artifacts/windows/* artifacts/linux/* RACErsLedger/

      - name: zip Windows
        uses: klaernie/zip-release@master
        with:
          filename: 'RACErsLedger-Windows.zip'
          path: RACErsLedger
          type: zip
          exclusions: RACErsLedger/racers-ledger-lamprey

      - name: tar Linux
        uses: klaernie/zip-release@master
        with:
          filename: 'RACErsLedger-Linux.tar.gz'
          path: RACErsLedger
          type: tar
          exclusions: racers-ledger-lamprey.exe

      - name: Display the results of the zipping
        run: ls -Rl RACErsLedger *.zip *.tar.gz

      - name: extract .zip/.tar as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ReleaseZipballs
          path: |
            *.zip
            *.tar.gz

      - name: Push Windows ZIP to Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            RACErsLedger-Windows.zip
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Push Linux ZIP to Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            RACErsLedger-Linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ github.token }}
